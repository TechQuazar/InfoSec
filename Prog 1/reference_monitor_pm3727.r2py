TYPE = "type"
ARGS = "args"
RETURN = "return"
EXCP = "exceptions"
TARGET = "target"
FUNC = "func"
OBJC = "objc"

class ABFile:
    def __init__(self, filename, create):
        mycontext['debug'] = False
        mycontext['lock'] = createlock()
        
        self.Afn = filename + '.a'
        self.Bfn = filename + '.b'
        
        if create and (self.Afn not in listfiles()):
            self.Afile = openfile(self.Afn, create)
            self.Bfile = openfile(self.Bfn, create)
            self.Afile.writeat('SE', 0) 
        
        else:
            self.Afile = openfile(self.Afn, True)
            data_in_a = self.Afile.readat(None, 0)
            valid_content = "".join(data_in_a)
            self.Bfile = openfile(self.Bfn, True)
            self.Bfile.writeat(valid_content, 0)

    def writeat(self, data, offset):
        mycontext['lock'].acquire(True)
        try:
            self.Bfile.writeat(data, offset)
        finally:
            mycontext['lock'].release()

    def readat(self, bytes, offset):
        try:
            return self.Afile.readat(bytes, offset)
        except:
            return ""

    def close(self):
        mycontext['lock'].acquire(True)
        try:
            final_content = self.Bfile.readat(None, 0)
            if final_content.startswith('S') and final_content.endswith('E'):
                data_to_write = "".join(final_content)
                self.Afile.close()
                removefile(self.Afn)
                self.Afile = openfile(self.Afn, True)
                self.Afile.writeat(data_to_write, 0)
        finally:
            mycontext['lock'].release()
        
        # Clean up and remove B file
        self.Afile.close()
        self.Bfile.close()
        removefile(self.Bfn)

def ABopenfile(filename, create):
    return ABFile(filename, create)

sec_file_def = {"obj-type":ABFile,
                "name":"ABFile",
                "writeat":{"type":"func","args":(str,(int)),"exceptions":Exception,"return":(int,type(None)),"target":ABFile.writeat},
                "readat":{"type":"func","args":((int,type(None)),(int)),"exceptions":Exception,"return":str,"target":ABFile.readat},
                "close":{"type":"func","args":None,"exceptions":None,"return":(bool,type(None)),"target":ABFile.close}
           }

CHILD_CONTEXT_DEF["ABopenfile"] = {TYPE:OBJC,ARGS:(str,bool),EXCP:Exception,RETURN:sec_file_def,TARGET:ABopenfile}

secure_dispatch_module()
